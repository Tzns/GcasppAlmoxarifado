// <auto-generated />
using System;
using Almoxarifado.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Almoxarifado.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210919210229_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Almoxarifado.Models.GEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empenho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GFornecedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GFornecedorId");

                    b.ToTable("Gentrada");
                });

            modelBuilder.Entity("Almoxarifado.Models.GEntradaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GEntradaId")
                        .HasColumnType("int");

                    b.Property<int?>("GProdutoId")
                        .HasColumnType("int");

                    b.Property<float>("PrecoMedio")
                        .HasColumnType("real");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("GEntradaId");

                    b.HasIndex("GProdutoId");

                    b.ToTable("GentradaItem");
                });

            modelBuilder.Entity("Almoxarifado.Models.GEstoque", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<float>("PrecoMedio")
                        .HasColumnType("real");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("GEstoque");
                });

            modelBuilder.Entity("Almoxarifado.Models.GFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GFornecedor");
                });

            modelBuilder.Entity("Almoxarifado.Models.GProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CAEDespesa")
                        .HasColumnType("bigint");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<long?>("ContaContabil")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GPrudutoUnidadeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GPrudutoUnidadeId");

                    b.ToTable("GProduto");
                });

            modelBuilder.Entity("Almoxarifado.Models.GProdutoUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("GProdutoUnidade");
                });

            modelBuilder.Entity("Almoxarifado.Models.GEntrada", b =>
                {
                    b.HasOne("Almoxarifado.Models.GFornecedor", "GFornecedor")
                        .WithMany()
                        .HasForeignKey("GFornecedorId");

                    b.Navigation("GFornecedor");
                });

            modelBuilder.Entity("Almoxarifado.Models.GEntradaItem", b =>
                {
                    b.HasOne("Almoxarifado.Models.GEntrada", "GEntrada")
                        .WithMany("GEntradaItem")
                        .HasForeignKey("GEntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Almoxarifado.Models.GProduto", "GProduto")
                        .WithMany()
                        .HasForeignKey("GProdutoId");

                    b.Navigation("GEntrada");

                    b.Navigation("GProduto");
                });

            modelBuilder.Entity("Almoxarifado.Models.GEstoque", b =>
                {
                    b.HasOne("Almoxarifado.Models.GProduto", "GProduto")
                        .WithOne()
                        .HasForeignKey("Almoxarifado.Models.GEstoque", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GProduto");
                });

            modelBuilder.Entity("Almoxarifado.Models.GProduto", b =>
                {
                    b.HasOne("Almoxarifado.Models.GProdutoUnidade", "GPrudutoUnidade")
                        .WithMany()
                        .HasForeignKey("GPrudutoUnidadeId");

                    b.Navigation("GPrudutoUnidade");
                });

            modelBuilder.Entity("Almoxarifado.Models.GEntrada", b =>
                {
                    b.Navigation("GEntradaItem");
                });
#pragma warning restore 612, 618
        }
    }
}
